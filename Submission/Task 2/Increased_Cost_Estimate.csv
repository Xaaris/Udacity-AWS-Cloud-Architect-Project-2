Group hierarchy,Region,Description,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary
Increased_Cost_Estimate,US East (N. Virginia),,Amazon EC2,0,14474,173688.00,USD,"Operating system (Linux), Quantity (250), Pricing strategy (On-Demand Instances), Storage amount (30 GB), Instance type (t3a.large)"
Increased_Cost_Estimate,US East (N. Virginia),,S3 Standard,0,62,744.00,USD,S3 Standard storage (2500 GB per month)
Increased_Cost_Estimate,US East (N. Virginia),,Application Load Balancer,0,527.43,6329.16,USD,Number of Application Load Balancers (1)
Increased_Cost_Estimate,US East (N. Virginia),,Network Load Balancer,0,235.43,2825.16,USD,"Number of Network Load Balancers (1), Processed bytes per NLB for TCP (50 GB per hour), Average number of new TCP connections (500 per second), Average TCP connection duration (20 seconds)"
Increased_Cost_Estimate,US East (N. Virginia),,Amazon Virtual Private Cloud (VPC),0,257.85,3094.20,USD,Number of NAT Gateways (1)
Increased_Cost_Estimate,US East (N. Virginia),Main DB,Amazon RDS for MySQL,0,2342.8999999999996,28114.80,USD,"Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (5 TB), Quantity (1), Instance type (db.m1.xlarge), Deployment option (Multi-AZ), Pricing strategy (OnDemand), Additional backup storage (5 TB)"
Increased_Cost_Estimate,US East (N. Virginia),,Amazon Route 53,0,20.5,246.00,USD,Hosted Zones (1)
Increased_Cost_Estimate,US East (N. Virginia),,Amazon Cognito,0,0.25,3.00,USD,"Advanced security features (Enabled), Number of monthly active users (MAU) (5)"
Increased_Cost_Estimate,US East (N. Virginia),,Amazon API Gateway,0,50,600.00,USD,"HTTP API requests units (millions), Average size of each request (34 KB), REST API request units (millions), Cache memory size (GB) (None), WebSocket message units (thousands), Average message size (32 KB), Requests (50 per month)"
Increased_Cost_Estimate,US East (N. Virginia),,AWS Lambda,0,35.8,429.60,USD,Number of requests (5000000)
Increased_Cost_Estimate,US East (N. Virginia),,DynamoDB on-demand capacity,0,250,3000.00,USD,"Average item size (all attributes) (128 KB), Data storage size (1000 GB)"
Increased_Cost_Estimate,US East (N. Virginia),Read replica,Amazon RDS for MySQL,0,928.25,11139.00,USD,"Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (5 TB), Quantity (1), Instance type (db.m1.xlarge), Deployment option (Single-AZ), Pricing strategy (OnDemand)"



Changes and reasoning:
As the RDS and EC2 instances are the heart of the application the increased budget allows to scale them up.
I went for a larger db instance, db.m1.xlarge instead of db.m1.large which brings double the amount of memory and should speed things up a bit.
The same goes for the EC2 instances.
Instead of t3a.mediums as in the initial estimate, I opted for t3a.large and scaled them up from 200 to 250 instances.
I also switched from buying them on a 1 year savings plan to having on demand instances which results in greater flexibility.
This allows to further optimize the service in the future as we are not bound to a specific instance type.